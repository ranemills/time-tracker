{"version":3,"sources":["../src/scripts/app.js"],"names":["angular","module","controller","recordService","activityService","$onInit","_","each","activity","addDefinedActivity","recordTime","startTime","endTime","addRecord","duration","diff","getSelectedActivity","getRecords","constant","window","service","selectedActivity","definedActivities","setSelectedActivity","getDefinedActivities","push","records","data","component","templateUrl","bindings","controllerAs","activitySelectorCtrl","changeActivity","getActivities","getButtonStyle","timePieChartCtrl","labels","chartData","equals","cachedRecords","clone","transform","result","record","get","size","keys","cachedData","values","$scope","timeChartCtrl","options","scales","yAxes","display","ticks","beginAtZero","onStop","moment","isTiming","start","$broadcast","stop","$on","bind","event"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('timeTrackerApp', ['angularMoment', 'timer', 'chart.js'])\n.controller('mainCtrl', function (recordService, activityService) {\n\n  this.$onInit = function() {\n    _.each(['Default', 'PR Review', 'Coding', 'Talking'], (activity) => activityService.addDefinedActivity(activity));\n  };\n\n  this.recordTime = function(startTime, endTime) {\n    recordService.addRecord({startTime, endTime, duration: endTime.diff(startTime), activity: activityService.getSelectedActivity()});\n  };\n\n  this.getRecords = recordService.getRecords;\n\n})\n.constant('_', window._)\n.service('activityService', function() {\n\n  let selectedActivity = '';\n  let definedActivities = [];\n\n  function getSelectedActivity() {\n    return selectedActivity;\n  }\n\n  function setSelectedActivity(activity) {\n    selectedActivity = activity;\n  }\n\n  function getDefinedActivities() {\n    return definedActivities;\n  }\n\n  function addDefinedActivity(activity) {\n    definedActivities.push(activity);\n  }\n\n  return {\n    getSelectedActivity,\n    setSelectedActivity,\n    getDefinedActivities,\n    addDefinedActivity\n  }\n})\n.service('recordService', function() {\n\n  // Record format: { startDate, endDate, duration, activity }\n\n  let records = [];\n\n  function getRecords() {\n    return records;\n  }\n\n  function addRecord(data) {\n    records.push(data);\n  }\n\n  return {\n    getRecords,\n    addRecord\n  }\n})\n.component('charts', {\n  templateUrl: 'components/charts.html',\n  bindings: {\n    records: '<'\n  },\n  controllerAs: 'chartsCtrl',\n  controller: function() {\n\n  }\n})\n.component('activitySelector', {\n  templateUrl: 'components/activity-selector.html',\n  bindings: {},\n  controllerAs: 'activitySelectorCtrl',\n  controller: function(activityService) {\n    let activitySelectorCtrl = this;\n\n    activitySelectorCtrl.$onInit = function() {\n      activitySelectorCtrl.changeActivity(activitySelectorCtrl.getActivities()[0]);\n    };\n\n    activitySelectorCtrl.getActivities = activityService.getDefinedActivities;\n\n    activitySelectorCtrl.getButtonStyle  = function(activity) {\n      return activity === activityService.getSelectedActivity() ? 'btn-primary' : 'btn-outline-primary';\n    };\n\n    activitySelectorCtrl.changeActivity = function(activity) {\n      activityService.setSelectedActivity(activity);\n    };\n  }\n})\n.component('timePieChart', {\n  templateUrl: 'components/time-pie-chart.html',\n  bindings: {\n    records: '<'\n  },\n  controllerAs: 'timePieChartCtrl',\n  controller: function() {\n    let timePieChartCtrl = this;\n\n    timePieChartCtrl.$onInit = function() {\n      timePieChartCtrl.labels = ['All'];\n    };\n\n    timePieChartCtrl.chartData = function() {\n      if(!angular.equals(timePieChartCtrl.records, timePieChartCtrl.cachedRecords))\n      {\n        timePieChartCtrl.cachedRecords = _.clone(timePieChartCtrl.records);\n\n        let data = _.transform(timePieChartCtrl.records, function(result, record) {\n          result[record.activity] = _.get(result, record.activity, 0) + record.duration/1000;\n        }, {});\n\n        if(_.size(data) !== 0) {\n          timePieChartCtrl.labels = _.keys(data);\n          timePieChartCtrl.cachedData =  _.values(data);\n        } else {\n          timePieChartCtrl.labels = ['N/A'];\n          timePieChartCtrl.cachedData = [0];\n        }\n      }\n      return timePieChartCtrl.cachedData;\n    }\n  }\n})\n.component('timeChart', {\n  templateUrl: 'components/time-chart.html',\n  bindings: {\n    records: '<'\n  },\n  controllerAs: 'timeChartCtrl',\n  controller: function($scope, _) {\n    let timeChartCtrl = this;\n\n    timeChartCtrl.$onInit = function() {\n      timeChartCtrl.labels = ['All'];\n      timeChartCtrl.options = {\n        scales: {\n          yAxes: [{\n            display: true,\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    };\n\n    timeChartCtrl.chartData = function() {\n      if(!angular.equals(timeChartCtrl.records, timeChartCtrl.cachedRecords))\n      {\n        timeChartCtrl.cachedRecords = _.clone(timeChartCtrl.records);\n\n        let data = _.transform(timeChartCtrl.records, function(result, record) {\n          result[record.activity] = _.get(result, record.activity, 0) + record.duration/1000;\n        }, {});\n\n        if(_.size(data) !== 0) {\n          timeChartCtrl.labels = _.keys(data);\n          timeChartCtrl.cachedData =  _.values(data);\n        } else {\n          timeChartCtrl.labels = ['N/A'];\n          timeChartCtrl.cachedData = [0];\n        }\n      }\n      return timeChartCtrl.cachedData;\n    }\n  }\n})\n.component('recordTable', {\n  templateUrl: 'components/records-table.html',\n  bindings: {\n    records: '<'\n  },\n  controllerAs: 'recordTableCtrl',\n  controller: function() {\n    this.getRecords = () => this.records;\n  }\n})\n.component('timerComponent', {\n  templateUrl: 'components/timer.html',\n  bindings: {\n    onStop: '&'\n  },\n  controllerAs: 'timerCtrl',\n  controller: function ($scope, moment) {\n\n    this.$onInit = function() {\n      this.isTiming = false;\n      this.startTime = null;\n      this.endTime = null;\n    };\n\n    this.start = function () {\n      $scope.$broadcast('timer-start');\n      this.startTime = moment();\n      this.isTiming = true;\n    };\n\n    this.stop = function () {\n      $scope.$broadcast('timer-stop');\n    };\n\n    // Once we know that the timer has stopped, we can do stuff with it\n    $scope.$on('timer-stopped', angular.bind(this, function (event, data) {\n      this.endTime = moment();\n      this.isTiming = false;\n      this.onStop({startTime: this.startTime, endTime: this.endTime});\n    }));\n  }\n});"]}